{"version":3,"sources":["components/CreateCard.js","components/SSJumbotron.js","components/SSNav.js","modalComponent.js","components.js","App.js","serviceWorker.js","index.js"],"names":["CreateCard","props","react_default","a","createElement","Card","className","id","style","width","Body","Title","title","Subtitle","subtitle","Text","text","SSJumbotron","Jumbotron","fluid","Container","textAlign","padding","SSNav","Navbar","expand","Brand","href","react_router_dom","to","Component","NewModal","_Component","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","state","show","inherits","createClass","key","value","setState","Fragment","Button","onClick","launchText","Modal","onHide","Header","closeButton","body","Footer","variant","require","gen","name","price","oz","inStock","syrupList","App","_this2","fetch","then","res","json","data","push","console","log","catch","error","Popover","_this3","ListGroup","map","syrup","Item","action","addToCart","disabled","Badge","SSNav_SSNav","react_router","path","component","SyrupModal","CardGroup","modalComponent_NewModal","renderSyrups","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aafb45f.chunk.js","sourcesContent":["import React from \"react\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n// eslint-disable-next-line\nimport {Navbar,Nav,Form,Jumbotron,Container,Card,Image,ListGroup,Button,Badge} from \"react-bootstrap\";\n\nexport default function CreateCard(props) {\n  return (\n    <Card className=\"singleCard\" id={props.id} style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {props.subtitle}\n        </Card.Subtitle>\n        <Card.Text>{props.text}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n// eslint-disable-next-line\nimport {Navbar,Nav,Form,Jumbotron,Container,Card,Image,ListGroup,Button,Badge} from \"react-bootstrap\";\n\nexport default function SSJumbotron(props) {\n  return (\n    <Jumbotron className=\"jumbo\" fluid>\n      <Container>\n        <br />\n        <h1 style={{ textAlign: \"center\" }}> Southside Syrups </h1>\n        <p style={{ textAlign: \"center\", padding: '20px 0 20px 0' }}>\n          <br />\n          One of Savannah's most interesting syrup sellers on the market. With\n          the most creative flavors and the least amount of excess sugar and\n          preservatives.\n        </p>\n      </Container>\n    </Jumbotron>\n  );\n}\n","import React, { Component } from \"react\";\n// eslint-disable-next-line\nimport {CardGroup, Navbar,Nav,Form,Jumbotron,Container,Card,Image,ListGroup,Button,Badge} from \"react-bootstrap\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\n\n/** Admin Access\n<Nav.Link>\n  <Link to={{ pathname: \"../admin/AddProduct\" }}>Admin Access</Link>\n</Nav.Link>\n*/\nexport default class SSNav extends Component {\n  render() {\n    // <Nav.Link>\n    // <Link to={{ pathname: \"../admin/AddProduct\" }}>Admin Access</Link>\n    // </Nav.Link>\n    // <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    // <Navbar.Collapse id=\"basic-navbar-nav\">\n    //   <Form inline>\n    //     <Nav className=\"mr-auto\">\n    //       <Nav.Link href=\"#cardOne\">About Us!</Nav.Link>\n    //       <Nav.Link>\n    //       <Link to={{ pathname: './SyrupModal' }}>Syrup List</Link>\n    //       </Nav.Link>\n    //     </Nav>\n    //     <Button inline variant=\"outline-success\" onClick={this.handle}>\n    //       Login\n    //     </Button>\n    //   </Form>\n    // </Navbar.Collapse>\n    // </Navbar>\n    return (\n  <div>\n  <Navbar className=\"nav\" expand=\"lg\">\n  <Navbar.Brand href=\"#\">\n  <Link to=\"/\">\n    Southside Syrups\n  </Link>\n  </Navbar.Brand>\n  </Navbar>\n  </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n// eslint-disable-next-line\nimport { Modal, Button } from \"react-bootstrap\";\n\nexport class NewModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  render() {\n    const props = this.props;\n    return (\n      <>\n        <Button className=\"yellow\" onClick={this.handleShow}>\n          {props.launchText}\n        </Button>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{props.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.body}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n","/*** components.js *\n ** -- Read this article on React-Router: http://tiny.cc/39jl4y\n **/\nimport { syrupList } from \"./App\";\n\nconst axios = require(\"axios\");\n\n/**\n * reusable nonexportable functions\n **/\nexport default function gen(id, name, price, oz, inStock) {\n  return { id: id, name: name, price: price, oz: oz, inStock: inStock };\n}\n","import React, { Component } from \"react\";\n// eslint-disable-next-line\nimport {\n  CardGroup,\n  Navbar,\n  Nav,\n  Form,\n  Jumbotron,\n  Container,\n  Card,\n  Image,\n  ListGroup,\n  Button,\n  Badge,\n  Popover\n} from \"react-bootstrap\";\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n// Components\nimport CreateCard from \"./components/CreateCard\";\nimport SSJumbotron from \"./components/SSJumbotron\";\nimport SSNav from \"./components/SSNav\";\n// eslint-disable-next-line\nimport SyrupModal from \"./components/SyrupModal\";\n// eslint-disable-next-line\nimport AddProduct from \"./admin/AddProduct\";\n\nimport \"./App.css\";\n/*\n * - launchText\n * - title\n * - body\n */\nimport { NewModal } from \"./modalComponent\";\n\nimport gen from \"./components\";\n\nconst axios = require(\"axios\");\n//{ id: id, name: name, price: price, oz: oz, inStock: inStock };\nexport var syrupList = [\n  gen(1, \"Simple Vanilla\", 9, 6, true),\n  gen(2, \"Chocolate\", 9, 6, true),\n  gen(3, \"Camp Fire\", 11, 6, true),\n  gen(4, \"Strawberry Marshmellow\", 12, 6, true),\n  gen(5, \"Basic Almond\", 9, 6, true),\n  gen(6, \"Sweetened Almonds\", 10, 6, true)\n];\nconst missionStatement = `Our mission is to bring Savannah the best tasting\nsyrups that you could use for coffee or tea or even baking. We use organic sugars and flavorings to bring you\nthe best product ever!`;\nconst buyTxt = `Thinking of buying one of our syrups? Just email us at southside.syrups@gmail.com!`;\n\nclass App extends Component {\n  state = {\n    syrupList: []\n  };\n  componentWillMount() {\n    fetch(\"./data/collection.json\") // JSON File Path\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ syrupList: syrupList.push(data) });\n        console.log(data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  addToCart() {\n    const popover = (\n      <Popover id=\"popover-basic\" title=\"Popover right\">\n        And here's some <strong>amazing</strong> content. It's very engaging.\n        right?\n      </Popover>\n    );\n    return popover;\n  }\n  renderSyrups() {\n    return (\n      <ListGroup variant=\"info\">\n        {syrupList.map(syrup => (\n          <ListGroup.Item\n            className=\"syrupLI\"\n            key={syrup.key}\n            action={this.addToCart()}\n            disabled={syrup.inStock ? false : true}\n          >\n            <Badge\n              className=\"stock\"\n              disabled\n              variant={syrup.inStock ? \"success\" : \"danger\"}\n            >\n              {syrup.inStock ? \"In Stock\" : \"Out of Stock\"}\n            </Badge>\n            <span />\n            {syrup.name}: ${syrup.price}, Oz:{syrup.oz}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    );\n  }\n  render() {\n    const syrupList = this.state.syrupList;\n    var syrupListings = syrupList.map(syrup => {\n      return (\n        <ListGroup variant=\"info\">\n          <ListGroup.Item className=\"syrupLI\" key={syrup.key} action>\n            <Badge variant={syrup.inStock ? \"success\" : \"danger\"}>\n              {syrup.inStock ? \"In Stock\" : \"Out of Stock\"}\n            </Badge>\n            {syrup.name}: ${syrup.price}, Oz:{syrup.oz}\n          </ListGroup.Item>\n        </ListGroup>\n      );\n    });\n    //<Route path=\"/admin/AddProduct\" component={AddProduct} />\n    return (\n      <div>\n        <Container>\n          <div className=\"App\">\n            <Router>\n              <SSNav />\n              <Switch>\n                <Route\n                  path=\"/components/SyrupModal\"\n                  component={this.SyrupModal}\n                />\n                <Route path=\"/\" />\n              </Switch>\n            </Router>\n            <SSJumbotron />\n            <CardGroup>\n              <CreateCard\n                title=\"Got Questions?\"\n                subtitle=\"Want to know more about our syrups or have any feedback?\"\n                text=\"Email us at southside.syrups@gmail.com!\"\n                id=\"cardThree\"\n              />\n              <CreateCard\n                title=\"About Us\"\n                subtitle=\"Based locally in savannah\"\n                text={missionStatement}\n                body=\"...\"\n                id=\"cardOne\"\n              />\n\n              <CreateCard\n                title=\"Buy our syrups\"\n                subtitle={buyTxt}\n                text={\n                  <NewModal\n                    launchText=\"View our syrups\"\n                    title=\"Current Syrup List\"\n                    body={this.renderSyrups()}\n                  />\n                }\n                id=\"cardTwo\"\n              />\n            </CardGroup>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}