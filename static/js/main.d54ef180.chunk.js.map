{"version":3,"sources":["Admin/AddProduct.js","modalComponent.js","store/Store.js","components.js","App.js","serviceWorker.js","index.js"],"names":["AddProduct","react_default","a","createElement","SSNav","Container","Form","Group","controlId","Label","Control","type","placeholder","Button","variant","Component","NewModal","_Component","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","handlePurchase","state","show","inherits","createClass","key","value","setState","react_router_dom","react_router","path","component","Fragment","className","onClick","launchText","Modal","onHide","Header","closeButton","Title","title","Body","body","Footer","syrupList","id","name","price","oz","inStock","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","inline","Nav","Link","to","pathname","SSJumbotron","Jumbotron","fluid","style","textAlign","CreateCard","Card","width","Subtitle","subtitle","Text","text","push","App","CardGroup","modalComponent_NewModal","ListGroup","map","syrup","Item","action","Badge","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d54ef180.chunk.js","sourcesContent":["/** AddProduct.js\n- Components needed\n  - form to input the requirements for gen()\n  - then that needs to update in the main option\n**/\nimport React, { Component } from 'react';\nimport { gen, syrupList, SSNav } from '../components';\nimport {Container, Form, Button} from 'react-bootstrap';\nimport App from '../App';\n\n//id, name, price, oz, inStock\nclass AddProduct extends Component {\n  render() {\n  return (\n  <div>\n    <SSNav/>\n    <h1>Admin</h1>\n    <Container>\n      <Form>\n      <Form.Group controlId=\"SyrupInput\">\n        <Form.Label>Enter new Syrup Product Name</Form.Label>\n          <Form.Control type=\"syrup\" placeholder=\"Enter a cool name\" />\n      </Form.Group>\n      <Form.Group controlId=\"PriceInput\">\n        <Form.Label>Enter the price</Form.Label>\n          <Form.Control type=\"price\" placeholder=\"Enter a price\" />\n      </Form.Group>\n      <Form.Group controlId=\"OzInput\">\n        <Form.Label>Enter the Oz the container holds</Form.Label>\n          <Form.Control type=\"syrup\" placeholder=\"Enter the ozs without the words 'ozs'\" />\n      </Form.Group>\n      <Form.Group controlId=\"StockInput\">\n        <Form.Label>Enter quantity on hand</Form.Label>\n          <Form.Control type=\"stock\" placeholder=\"Enter the quantity on hand\" />\n      </Form.Group>\n      </Form>\n      <Button variant=\"primary\" type=\"submit\">\n    Submit\n    </Button>\n    </Container>\n  </div>\n    )\n  }\n}\nexport default AddProduct;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport AddProduct from \"./Admin/AddProduct\";\n\nexport class NewModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  handlePurchase() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"./AddProduct\" component={AddProduct} />\n        </div>\n      </Router>\n    );\n  }\n  render() {\n    const props = this.props;\n    return (\n      <>\n        <Button className=\"yellow\" onClick={this.handleShow}>\n          {props.launchText}\n        </Button>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{props.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.body}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.handlePurchase}>\n              Purchase\n            </Button>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n","// Store.js\nimport React, { Component } from 'react';\nimport {SSNav} from '../components';\n/***\n* idea station:\n*\n*\n**/\nclass Store extends Component {\n  render () {\n    return (\n      <SSNav/>\n    )\n  }\n}\n\nexport default Store;\n","/*** components.js *\n ** -- Read this article on React-Router: http://tiny.cc/39jl4y\n **/\nimport React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport {\n  Navbar,\n  Nav,\n  Form,\n  Jumbotron,\n  Container,\n  Card,\n  Image,\n  ListGroup,\n  Button,\n  Badge\n} from \"react-bootstrap\";\n/*\n * - launchText\n * - title\n * - body\n */\nimport { NewModal } from \"./modalComponent\";\nimport Store from \"./store/Store\";\nimport AddProduct from \"./Admin/AddProduct\";\n\n/**\n * reusable nonexportable functions\n **/\nexport function gen(id, name, price, oz, inStock) {\n  return { id: id, name: name, price: price, oz: oz, inStock: inStock };\n}\n/***\n * exported variables\n **/\nexport const missionStatement = `Our mission is to bring Savannah the best tasting\nsyrups that you could use for coffee or tea or even baking. We use organic sugars and flavorings to bring you\nthe best product ever!`;\n/** Where all the syrups are stored\n * - id, name, price, oz required\n **/\nexport var syrupList = [\n  { id: 1, name: \"Vaalmond\", price: 15, oz: 6, inStock: true },\n  { id: 2, name: \"Classic Hazelnut\", price: 16, oz: 6, inStock: true },\n  { id: 3, name: \"Lavender\", price: 17, oz: 8, inStock: false }\n];\n//test\nsyrupList.push(gen(4, \"Candied Almonds\", 15, 8, true));\n/***\n * Exported Functions used in order\n *\n <Router>\n    <div>\n      <Link to=\"/\">Home</Link>{' '}\n      <Link to={{pathname: '/about'}}>About</Link>{' '}\n      <Link to=\"/contact\">Contact</Link>\n\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route\n          path=\"/contact\"\n          render={() => <h1>Contact Us</h1>} />\n        <Route path=\"/blog\" children={({match}) => (\n          <li className={match ? 'active' : ''}>\n            <Link to=\"/blog\">Blog</Link>\n          </li>)} />\n        <Route render={() => <h1>Page not found</h1>} />\n      </Switch>\n    </div>\n  </Router>\n **/\nexport function SSNav(props) {\n  return (\n    <Navbar className=\"nav\" expand=\"lg\">\n      <Router>\n        <Navbar.Brand href=\"#\">Southside Syrups</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Form inline>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#cardOne\">About Us!</Nav.Link>\n              <Nav.Link href=\"###\">Syrup List</Nav.Link>\n              <Nav.Link href=\"#CardThree\">\n                <Link to={{ pathname: \"admin\" }}>Admin Access</Link>\n              </Nav.Link>\n            </Nav>\n            <Button inline variant=\"outline-success\">\n              Login\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n        <Switch>\n          <Route path=\"admin\" component={AddProduct} />\n        </Switch>\n      </Router>\n    </Navbar>\n  );\n}\nexport function SSJumbotron(props) {\n  return (\n    <Jumbotron className=\"jumbo\" fluid>\n      <Container>\n        <br />\n        <h1 style={{ textAlign: \"center\" }}> Southside Syrups </h1>\n        <p style={{ textAlign: \"center\" }}>\n          <br />\n          One of Savannah's most interesting syrup sellers on the market. With\n          the most creative flavors and the least amount of excess sugar and\n          preservates.\n        </p>\n      </Container>\n    </Jumbotron>\n  );\n}\nexport function CreateCard(props) {\n  return (\n    <Card className=\"singleCard\" id={props.id} style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {props.subtitle}\n        </Card.Subtitle>\n        <Card.Text>{props.text}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\nexport function renderSyrups() {\n  return (\n    <ListGroup variant=\"info\">\n      {syrupList.map(syrup => (\n        <ListGroup.Item className=\"syrupLI\" key={syrup.key} action>\n          <Badge variant={syrup.inStock ? \"success\" : \"danger\"}>\n            {syrup.inStock ? \"In Stock\" : \"Out of Stock\"}\n          </Badge>\n          {syrup.name}: ${syrup.price}, Oz:{syrup.oz}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n\nexport function LargeImg(props) {\n  return <Image src={props.src} fluid />;\n}\n","import React, { Component } from \"react\";\nimport { Container, CardGroup } from \"react-bootstrap\";\nimport {\n  SSNav,\n  SSJumbotron,\n  CreateCard,\n  renderSyrups,\n  syrupList,\n  missionStatement\n} from \"./components\";\nimport AddProduct from \"./Admin/AddProduct\";\n\nimport \"./App.css\";\n/*\n * - launchText\n * - title\n * - body\n */\nimport { NewModal } from \"./modalComponent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      show: false\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Container>\n          <div className=\"App\">\n            <SSNav />\n            <SSJumbotron />\n            <CardGroup>\n              <CreateCard\n                title=\"Got Questions?\"\n                subtitle=\"Want to know more about our syrups or have any feedback?\"\n                text=\"Email us at southside.syrups@gmail.com!\"\n                id=\"cardThree\"\n              />\n              <CreateCard\n                title=\"About Us\"\n                subtitle=\"Based locally in savannah\"\n                text={missionStatement}\n                body=\"...\"\n                id=\"cardOne\"\n              />\n\n              <CreateCard\n                title=\"Buy our syrups\"\n                subtitle=\"Thinking of buying one of our syrups?\"\n                text={\n                  <NewModal\n                    launchText=\"View our syrups\"\n                    title=\"Current Syrup List\"\n                    body={renderSyrups()}\n                  />\n                }\n                id=\"cardTwo\"\n              />\n            </CardGroup>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}